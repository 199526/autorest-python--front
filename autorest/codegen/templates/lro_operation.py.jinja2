{% import 'operation_tools.jinja2' as op_tools with context %}
{% import 'lro_operation_helper.jinja2' as helper with context %}
{% set trace_decorator = "@distributed_trace_async" if async_mode else "@distributed_trace" %}
{% set operation_name = "begin_"+operation.python_name %}
{# actual template starts here #}
{% if code_model.options['tracing'] %}
{{ trace_decorator }}
{% endif %}
{{ operation_serializer.method_signature_and_response_type_annotation(operation) }}
    {{ op_tools.description(operation, operation_serializer) | indent }}{{ helper.lro_operation() }}

    def get_long_running_output(pipeline_response):
        {% if operation.lro_response.has_headers %}
        response_headers = {}
        response = pipeline_response.http_response
        {% endif %}
        {% if operation.lro_response %}
        {{ op_tools.response_handling(operation.lro_response)|indent(8) }}
        {% endif %}
        if cls:
            return cls(pipeline_response, {{ 'deserialized' if operation.lro_response.has_body else 'None'}}, {{ 'response_headers' if operation.lro_response.has_headers else '{}' }})
        {% if operation.lro_response.has_body %}
        return deserialized
        {% endif %}

{{ helper.lro_operation_return() }}