# coding=utf-8
{{ code_model.options['license_header'] }}

{{ imports }}
"""
The sample just shows how to use the method and may not run successfully.
# PREREQUISITES
{% if "credential" in client_params %}
    pip install azure-identity
{% endif %}
    pip install {{ (code_model.options["package_name"] or code_model.client.name)|lower }}
# USAGE
    python {{ file_name }}
    {% if auth_type == "aad" %}

    Before run the sample, please set the values of the client ID, tenant ID and client secret 
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
    {% elif auth_type == "key" %}
    
    Before run the sample, please set environment variables AZURE_KEY with real value
    which can access your service
    {% endif %}
"""
def main():
    client = {{ code_model.client.name }}(
        {% for key, value in client_params.items() %}
        {{ key }}={{ value }},
        {% endfor %}
    )

    {% if operation_params %}
    response = client.{{ operation_group_name }}.{{ operation_name }}(
        {% for key, value in operation_params.items() %}
        {{ key }}={{ value|indent(8) }},
        {% endfor %}
    ){{ operation_result }}
    {% else %}
    response = client.{{ operation_group_name }}.{{ operation_name }}(){{ operation_result }}
    {% endif %}
    print(response)

{% if origin_file %}
# x-ms-original-file: {{ origin_file }}
{% endif %}
if __name__ == "__main__":
    main()
