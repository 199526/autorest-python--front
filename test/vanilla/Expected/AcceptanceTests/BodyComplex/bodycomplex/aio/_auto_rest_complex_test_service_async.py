# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from azure.core import PipelineClient
from msrest import Serializer, Deserializer

from ._configuration_async import AutoRestComplexTestServiceConfiguration
from msrest.exceptions import HttpOperationError
from .operations_async import BasicOperations
from .operations_async import PrimitiveOperations
from .operations_async import ArrayOperations
from .operations_async import DictionaryOperations
from .operations_async import InheritanceOperations
from .operations_async import PolymorphismOperations
from .operations_async import PolymorphicrecursiveOperations
from .operations_async import ReadonlypropertyOperations
from .operations_async import FlattencomplexOperations
from .. import models


class AutoRestComplexTestService:
    """Test Infrastructure for AutoRest


    :ivar basic: Basic operations
    :vartype basic: bodycomplex.aio.operations_async.BasicOperations
    :ivar primitive: Primitive operations
    :vartype primitive: bodycomplex.aio.operations_async.PrimitiveOperations
    :ivar array: Array operations
    :vartype array: bodycomplex.aio.operations_async.ArrayOperations
    :ivar dictionary: Dictionary operations
    :vartype dictionary: bodycomplex.aio.operations_async.DictionaryOperations
    :ivar inheritance: Inheritance operations
    :vartype inheritance: bodycomplex.aio.operations_async.InheritanceOperations
    :ivar polymorphism: Polymorphism operations
    :vartype polymorphism: bodycomplex.aio.operations_async.PolymorphismOperations
    :ivar polymorphicrecursive: Polymorphicrecursive operations
    :vartype polymorphicrecursive: bodycomplex.aio.operations_async.PolymorphicrecursiveOperations
    :ivar readonlyproperty: Readonlyproperty operations
    :vartype readonlyproperty: bodycomplex.aio.operations_async.ReadonlypropertyOperations
    :ivar flattencomplex: Flattencomplex operations
    :vartype flattencomplex: bodycomplex.aio.operations_async.FlattencomplexOperations

    :param str base_url: Service URL
    """

    def __init__(
            self, base_url=None, config=None, **kwargs):

        self._config = config or AutoRestComplexTestServiceConfiguration(**kwargs)
        super(AutoRestComplexTestService, self).__init__(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2016-02-29'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.basic = BasicOperations(
            self, self._config, self._serialize, self._deserialize)
        self.primitive = PrimitiveOperations(
            self, self._config, self._serialize, self._deserialize)
        self.array = ArrayOperations(
            self, self._config, self._serialize, self._deserialize)
        self.dictionary = DictionaryOperations(
            self, self._config, self._serialize, self._deserialize)
        self.inheritance = InheritanceOperations(
            self, self._config, self._serialize, self._deserialize)
        self.polymorphism = PolymorphismOperations(
            self, self._config, self._serialize, self._deserialize)
        self.polymorphicrecursive = PolymorphicrecursiveOperations(
            self, self._config, self._serialize, self._deserialize)
        self.readonlyproperty = ReadonlypropertyOperations(
            self, self._config, self._serialize, self._deserialize)
        self.flattencomplex = FlattencomplexOperations(
            self, self._config, self._serialize, self._deserialize)
