@using AutoRest.Python.vanilla.Templates
@using System.Linq
@using AutoRest.Core.Model
@using AutoRest.Core.Utilities
@using AutoRest.Extensions.Azure
@using AutoRest.Python
@using AutoRest.Python.Azure.Model
@using AutoRest.Python.azure.Templates
@using AutoRest.Python.Model
@inherits AutoRest.Python.PythonTemplate<CodeModelPya>
# coding=utf-8
# --------------------------------------------------------------------------
@Header("# ").TrimMultilineHeader()
# --------------------------------------------------------------------------
@EmptyLine
@if (Model.HasAnyDeprecated)
{
@:import warnings
}
@if(Model.HasAnyHttpRequestErrors)
{
@:from azure.core import HttpRequestError
}
@if (Model.HasAnyLongRunOperation)
{
@:from msrest.polling.async_poller import async_poller, AsyncNoPolling
@:from msrestazure.polling.async_arm_polling import AsyncARMPolling
}
@if (Model.HasAnyModel)
{
@:from ... import models
}
import uuid
@EmptyLine
@EmptyLine
class @(Model.Name)OperationsMixin:
    def _map_error(self, status_code, response, **config):
        error_map = config.get("error_map")
        if error_map is None:
            return
        error_type = error_map.get(status_code)
        if error_type is None:
            return
        error = error_type(response=response)
        raise error
@foreach (var method in Model.MethodTemplateModels.Where(each => each.MethodGroup.IsCodeModelMethodGroup))
{
@EmptyLine
@(Include(new AzureMethodTemplate() {AsyncMode = true, Python3Mode = true}, (MethodPya)method))
}
